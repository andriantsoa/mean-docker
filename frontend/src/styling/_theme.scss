@import "./_palette.scss";

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// $frontend-primary: mat-palette($mat-indigo);
// $frontend-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
// $frontend-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
// $frontend-theme: mat-dark-theme(
//   (
//     color: (
//       primary: $frontend-primary,
//       accent: $frontend-accent,
//       warn: $frontend-warn
//     )
//   )
// );
// :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include angular-material-theme($frontend-theme);

$primary: mat-palette($md-primary);
$accent: mat-palette($md-accent);
$warn: mat-palette($md-warn);
$sucess: mat-palette($md-success);

$theme: mat-light-theme($primary, $accent, $warn);
@include angular-material-theme($theme);
